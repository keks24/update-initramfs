#!/bin/busybox sh
#############################################################################
# Copyright 2018 Ramon Fischer                                              #
#                                                                           #
# Licensed under the Apache License, Version 2.0 (the "License");           #
# you may not use this file except in compliance with the License.          #
# You may obtain a copy of the License at                                   #
#                                                                           #
#     http://www.apache.org/licenses/LICENSE-2.0                            #
#                                                                           #
# Unless required by applicable law or agreed to in writing, software       #
# distributed under the License is distributed on an "AS IS" BASIS,         #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #
# See the License for the specific language governing permissions and       #
# limitations under the License.                                            #
#############################################################################

# functions
## rescue shell
rescue_shell()
{
    local error_type="${1}"
    local error_message="${2}"

    case "${error_type}" in
        "ERROR")
            echo -e "\e[01;31mERROR: ${error_message}\e[0m"
            ;;

        "WARNING")
            echo -e "\e[01;33mWARNING: ${error_message}\e[0m"
            ;;

        *)
            echo -e "\e[01;31mSomething went wrong. Dropping to a shell.\e[0m"
            ;;
    esac

    exec sh
}

## filter kernel parameter entries
cmdline()
{
    local value
    value=" $(cat /proc/cmdline) "
    value="${value##* ${1}=}"
    value="${value%% *}"

    if [[ "${value}" != "" ]]
    then
        echo "${value}"
    fi
}

# set custom font for "/dev/console"
setfont -C /dev/console /usr/share/consolefonts/ter-112n.psf.gz

# temporarily mount several filesystems
mount -t proc none /proc
mount -t sysfs none /sys
mount -t devtmpfs none /dev

# disable kernel messages
#echo "0" > /proc/sys/kernel/printk

# clear the screen
#clear

# decrypt and mount the root filesystem
cryptsetup --tries 5 open --type luks $(findfs $(cmdline crypt_root)) cryptroot || rescue_shell "ERROR" "Could not decrypt the root partition."
mount -o ro /dev/mapper/cryptroot /mnt/root || rescue_shell "ERROR" "Could not mount the root partition."

# clean up
umount /proc
umount /sys
umount /dev

# boot the real system
exec switch_root /mnt/root /sbin/init
